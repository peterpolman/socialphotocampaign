<?php
function opknappertje_block_info() {
  $blocks['hero_block'] = array(
    'info' => t('Hero block'),
    'region' => 'header',
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['hero_block_default'] = array(
    'info' => t('Hero block default'),
    'region' => 'header',
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['hero_block_campaign'] = array(
    'info' => t('Hero block campaign'),
    'region' => 'header',
    'cache' => DRUPAL_NO_CACHE,
    'attributes' => array('classes'=>'')
  );
  $blocks['hero_block_campaign_top5'] = array(
    'info' => t('Hero block campaign top 5'),
    'region' => 'header',
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

function opknappertje_preprocess_block(&$variables) {
  if (strtolower($variables['block']->delta) == 'votes-vote_users') {
    $flag = flag_get_flag('vote', arg(1));
    $vote_count = $flag->get_count(arg(1));

    $block_title = ($vote_count == 1 ) ?  'Al ' . $vote_count .' persoon heeft gestemd!' : 'Al ' . $vote_count . ' personen hebben gestemd!';
    $variables['block']->subject = $block_title;
  }
}

function opknappertje_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'hero_block':
      $block['subject'] = '<none>';
      $block['content'] = _opknappertje_hero_block_content(arg(1), arg(2));
    break;
    case 'hero_block_default':
      $block['subject'] = '<none>';
      $block['content'] = _opknappertje_hero_block_default_content();
    break;
    case 'hero_block_campaign':
      $block['subject'] = '<none>';
      $block['content'] = _opknappertje_hero_block_campaign_content(arg(1));
    break;
    case 'hero_block_campaign_top5':
      $block['subject'] = t('Top 5');
      $block['content'] = _opknappertje_hero_block_campaign_top5_content(arg(1));
    break;
  }

  return $block;
}

function _opknappertje_image_from_fid($fid, $image_style = 'thumbnail') {
  $uri = file_load($fid)->uri;
  $image_url = image_style_url($image_style, $uri);

  return $image_url;
}

function _opknappertje_create_contribution_info_array($node, $user) {
  // Get contribution image
  $image_url = image_style_url('medium', $node->field_contribution[LANGUAGE_NONE][0]['uri']);

  // Get user data
  $first_name = ($user->field_first_name) ? $user->field_first_name[LANGUAGE_NONE][0]['value'] : '';
  $last_name = ($user->field_last_name) ? $user->field_last_name[LANGUAGE_NONE][0]['value'] : '';
  $city = ($user->field_city) ? $user->field_city[LANGUAGE_NONE][0]['value'] : '';

  // Get vote count
  $flag = flag_get_flag('vote');
  $vote_count = $flag->get_count($node->nid);

  // Add to array
  $contribution_info = array(
    'path' => drupal_lookup_path('alias', 'node/' . $node->nid),
    'image_url' => $image_url,
    'first_name' => $first_name,
    'last_name' => $last_name,
    'city' => $city,
    'vote_count' => $vote_count,
    'created' => $node->created,
    'picture' => _opknappertje_image_from_fid($node->picture),
  );

  return $contribution_info;

}

function _opknappertje_hero_block_campaign_top5_content() {

  // Load active campaign
  $node = _opknappertje_get_active_campaign(time());

  // Load the node
  if (isset($node->nid)) {
    $node = node_load($node->nid);
    $markup = '<ul>';

    $contribution_array = array();

    // Order the array of nids based on flag count
    foreach ($node->field_contributions[LANGUAGE_NONE] as $contribution) {

      $flag = flag_get_flag('vote');
      $vote_count = $flag->get_count($contribution['target_id']);
      $contribution_array[$contribution['target_id']] = $vote_count;
    }

    arsort($contribution_array);

    foreach ($contribution_array as $key => $value) {

      $node = node_load($key);
      $user = user_load($node->uid);

      $contribution_info  = _opknappertje_create_contribution_info_array($node, $user);

      $markup .= '<li>
      <a href="/'. $contribution_info['path'] .'" class="contribution">
      <div class="picture">
      <img class="img-responsive" src="'. $contribution_info['picture'] .'" width="100" height="100" alt="">
      </div>
      <div class="vote-count">
      '.$contribution_info['vote_count'].'
      </div>
      <span class="username">
      '.$contribution_info['first_name'].'
      </span>
      <span class="location">
      '.$contribution_info['city'].'
      </span>
      </a>
      </li>';
    }

    $markup .= '</ul>';

  } else {
    $markup = t('Er zijn nog geen inzendingen op de lopende campagne.');
  }

  return $markup;

}

function _opknappertje_hero_block_campaign_content($nid) {
  $node = node_load($nid);

  $text = _opknappertje_campaign_time_left(time(), $node->field_date[LANGUAGE_NONE][0]);
  $status = _opknappertje_campaign_status(time(), $node->field_date[LANGUAGE_NONE][0]);

  $markup = '<h2>' . $text . '</h2>';

  if ($status === 'active') {
    $markup .= '<ul><li>
                <a class="btn btn-green" href="/node/add/contribution">Doe snel mee!</a>
                </li></ul>';
    $markup .= '<div class="view-filters">
                  <span>Sorteer:</span>
                  <button class="btn btn-red sort-by-name" data-sort-value="name">Naam</button>
                  <button class="btn btn-red sort-by-votes" data-sort-value="votes">Stemmen</button>
                  <button class="btn btn-red sort-by-created" data-sort-value="created">Datum</button>
                </div>';
  } else {
    $markup .= '<ul><li>
                <a class="btn btn-green" href="/campagnes">Kies een andere campagne</a>
                </li></ul>';
  }

  return $markup;
}


function _opknappertje_get_active_campaign($current_time){
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'campaign')
    ->propertyCondition('status', NODE_PUBLISHED) // Make sure to select a published campaign
    ->fieldCondition('field_date', 'value', $current_time, '<') // Make sure to select an active campaign
    ->fieldCondition('field_date', 'value2', $current_time, '>') // Make sure to select an active campaign
    ->propertyOrderBy('created', 'DESC') // Make sure to select the newest campaign in the array
    ->range(0, 1); // Make sure to select only one

  $result = $query->execute();

  if (isset($result['node'])) {
    foreach ($result['node'] as $campaign) {
      // Return the campaign
      return $campaign;
    }
  } else {
    // Return false when there are no active campaigns
    return FALSE;
  }

}

function _opknappertje_user_contribution_unique_validate($node){
  $active_campaign = _opknappertje_get_active_campaign($node->created);

  if ($active_campaign != FALSE) {
    // Get the active campaign node
    $node = node_load($active_campaign->nid);

    // Loop through contributions if they exist
    if (!empty($node->field_contributions[LANGUAGE_NONE])) {

      foreach ($node->field_contributions[LANGUAGE_NONE] as $contribution) {

        // Load the current user
        global $user;

        // Load the contrib
        $contribution = node_load($contribution['target_id']);

        // See if node with current uid exists
        if ($contribution->uid == $user->uid) {

          return FALSE;

        }
      }
    }
  } else {
    // there is no active campaign
  }

  return TRUE;

}

function opknappertje_node_validate($node, $form, &$form_state) {
  if ($node->type === 'contribution') {
    $active_campaign = _opknappertje_get_active_campaign($node->created);
    $unique_contribution = _opknappertje_user_contribution_unique_validate($node, $active_campaign);

    if ($active_campaign == FALSE) {
      form_set_error('field_contribution', t('Sorry, er zijn op dit moment geen lopende campagnes.'));

    }
    elseif ($unique_contribution == FALSE && $form['#node_edit_form'] != TRUE) {
      form_set_error('field_contribution', t('Sorry, je mag maar 1x per campagne een inzending plaatsen.'));

    }

  }

}

function _opknappertje_hero_block_content($nid, $action) {
  $markup ='';

  if (is_numeric($nid) && $action != 'edit' && $action != 'delete') {
    $node = node_load($nid);
    $user = user_load($node->uid);

    if ( $node->type === 'contribution' ) {
      $uri = $node->field_contribution[LANGUAGE_NONE][0]['uri'];
      $image_path = image_style_url('large', $uri);

      $markup = '
      <h1><small>Een kijkje in de keuken van</small><br />' . $user->field_first_name[LANGUAGE_NONE][0]['value']  . ' ' . $user->field_last_name[LANGUAGE_NONE][0]['value'] . '</h1>
      <ul>
        <li>' . flag_create_link('vote', $node->nid) . '</li>
        <li>
        <a class="btn btn-facebook" href="' . _create_fb_share_link($node->nid) . '" target="_blank">Deel op Facebook!</a>
        </li>
      </ul>
      <div class="image"><img src="' . $image_path .'" alt="" /></div>
      ';
    }
  }

  return $markup;
}

function _opknappertje_hero_block_default_content() {
  $markup = '
  <h1>Knap je keuken op!</h1>
  <p>Maak een account, plaats een foto van je keuken en laat je vrienden stemmen.</p>
  <ul><li><a href="/node/add/contribution" class="btn btn-green">Doe direct mee!</a></li>
  <li><a href="/campagnes" class="btn btn-green">Onze campagnes</a></li></ul>
  ';

  return $markup;
}

function opknappertje_node_insert($node) {
  if ($node->type === 'contribution') {

    $campaign =_opknappertje_get_active_campaign($node->created);
    $campaign = node_load($campaign->nid);
    $campaign->field_contributions[LANGUAGE_NONE][] = array(
      'target_id' => $node->nid,
    );

    node_save($campaign);

    drupal_set_message(t('Gefeliciteerd, je inzending is aan de campagne toegevoegd!'), 'status');

  }

}
function _opknappertje_campaign_time_left($current, $date) {
  $output = '';

  if ($date['value'] < $current && $date['value2'] > $current ){
    $days = $date['value2'] - $current;
    $days = ceil($days / (60 * 60 * 24));

    $output = t('Nog minder dan @amount_of_days dagen te gaan.', array('@amount_of_days' => $days));

  }
  elseif ($date['value'] > $current){
    $date = date('d-m-Y H:i', $date['value']);

    $output = t('Deze campagne start op @date.', array('@date' => $date));
  }
  else {
    $output = t('Helaas, deze campagne is al afgelopen!');

  }

  return $output;
}


function _create_fb_share_link($nid) {
  global $base_url;

  $path = drupal_get_path_alias('node/' . $nid);
  $path_alias = 'https://www.facebook.com/dialog/share?app_id=177969065690482&display=popup&href=' . htmlentities( $base_url . '/' . $path ) . '&redirect_uri=' . htmlentities( $base_url . '/' . $path);

  return $path_alias;
}

function _opknappertje_campaign_status($current, $date) {
  $status = '';

  if ($current > $date['value'] && $current < $date['value2']) {
    $status = 'active';

  } else {
    $status = 'inactive';

  }
  return $status;
}

function opknappertje_preprocess_node(&$variables){
  if ($variables['type'] === 'campaign' && $variables['view_mode'] === 'teaser') {

    $variables['campaign_info'] = array(
      'start_date' => $variables['field_date'][0]['value'],
      'end_date' => $variables['field_date'][0]['value2'],
      'message' => _opknappertje_campaign_time_left(time(), $variables['field_date'][0]),
      'status' => _opknappertje_campaign_status(time(), $variables['field_date'][0]),
    );

  }
  if ($variables['type'] === 'campaign' && $variables['view_mode'] === 'full') {

    // @todo This check for grid rendering is worthless
    if (isset($variables['field_contributions'])) {

      foreach ($variables['field_contributions'] as $contribution) {
        $node = $contribution['entity'];
        $user = user_load($node->uid);

        // Get contribution image
        $image_url = image_style_url('medium', $node->field_contribution[LANGUAGE_NONE][0]['uri']);

        // Get user data
        $first_name = ($user->field_first_name) ? $user->field_first_name[LANGUAGE_NONE][0]['value'] : '';
        $last_name = ($user->field_last_name) ? $user->field_last_name[LANGUAGE_NONE][0]['value'] : '';
        $city = ($user->field_city) ? $user->field_city[LANGUAGE_NONE][0]['value'] : '';

        // Get vote count
        $flag = flag_get_flag('vote');
        $vote_count = $flag->get_count($node->nid);

        // Add to variables array
        $variables['contributions'][] = array(
          'path' => drupal_lookup_path('alias', 'node/' . $node->nid),
          'image_url' => $image_url,
          'first_name' => $first_name,
          'last_name' => $last_name,
          'city' => $city,
          'vote_count' => $vote_count,
          'created' => $node->created,
        );

      }

    } else {
      drupal_set_message(t('Er zijn nog geen inzendingen voor deze campagne'), 'warning');
    }

  }

  if ($variables['type'] === 'contribution') {
    $user = user_load($variables['uid']);

    if ($user->field_first_name) {
      $variables['user_profile']['first_name'] = $user->field_first_name[LANGUAGE_NONE][0]['value'];
    }
    if ($user->field_last_name) {
      $variables['user_profile']['last_name'] = $user->field_last_name[LANGUAGE_NONE][0]['value'];
    }
    // if ($variables['user']->picture > 0) {
    //   $file = file_load($variables['user']->picture);
    //   $variables['user_profile']['picture'] = image_style_url('medium', $file->uri);
    // }
    if ($user->field_city) {
      $variables['user_profile']['city'] = $user->field_city[LANGUAGE_NONE][0]['value'];
    }

    // Get vote count
    $flag = flag_get_flag('vote');
    $variables['contribution']['vote_count'] = $flag->get_count($variables['nid']);

    // Get node url
    global $base_url;
    $variables['contribution']['url'] = $base_url . $variables['node_url'];
  }

  if ($variables['type'] === 'contribution' && $variables['view_mode'] === 'teaser') {
    $variables['contribution']['image'] = image_style_url('medium', $variables['field_contribution'][0]['uri']);
  }

  if ($variables['type'] === 'contribution' && $variables['view_mode'] === 'full') {
    $variables['contribution']['image'] = image_style_url('large', $variables['field_contribution'][0]['uri']);
    $variables['contribution']['body'] = $variables['body'][0]['value'];

    $og_image = array(
		  '#tag' => 'meta',
		  '#attributes' => array(
		    'property' => 'og:image',
		    'content' => $variables['contribution']['image'],
		  ),
		);

		drupal_add_html_head($og_image, 'og_image');

		$og_title = array(
		 '#tag' => 'meta',
		 '#attributes' => array(
			 'property' => 'og:title',
			 'content' => $variables['title'],
		 ),
		);

		drupal_add_html_head($og_title, 'og_title');

		$og_description = array(
		 '#tag' => 'meta',
		 '#attributes' => array(
			 'property' => 'og:description',
			 'content' => 'Stem op de keuken van ' . $variables['user_profile']['first_name'] . '! ' . $variables['user_profile']['first_name'] . ' maakt dan meer kans om een 750,- te winnen.',
		 ),
		);

		drupal_add_html_head($og_description, 'og_description');

    $variables['contribution']['fb_share_link'] = _create_fb_share_link($variables['nid']);
  }
}
?>
