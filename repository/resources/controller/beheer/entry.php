<?php

/**
 * Autogenerated CRUD controller
 * Template version March 12th 2013
 */
class EntryController extends WE_Controller_Crud
{
	
	public function	indexAction () {
		$entries = Db::getTable('Entry')->getAll(true,false);
		$this->view->assign('entries',$entries);
		return $this->view->render();
	}
	
	public function	viewAction () {
		$entryId = $this->getRequest()->getGet('id');
		$entry = Db::getModel('Entry')->find($entryId);
		
		if ( !is_object($entry) ) {
			WE_Engine_Session::setFlash('De opgegeven entry bestaat niet.', 'error');
			$this->redirect($this->getRequest()->getSystemKey()."/entry");
		} else {
			$this->view->assign('entry',$entry);	
			return $this->view->render();
		}
	}

	public function	addAction () {
		if ($this->getRequest()->isPost()) {
			$entry = Db::getModel('Entry');
			$postdata = $this->getRequest()->getPost('entry');
			
			$entry->setStatus($postdata['status']);
			$entry->setFilename($postdata['filename']);
			$entry->setFirst_name($postdata['first_name']);
			$entry->setLast_name($postdata['last_name']);
			$entry->setDescription($postdata['description']);
			$entry->setEmail($postdata['email']);
			$entry->setIp($postdata['ip']);
			$entry->setNewsletter($postdata['newsletter']);
			$entry->setStreet_name($postdata['street_name']);
			$entry->setStreet_number($postdata['street_number']);
			$entry->setPostal_code($postdata['postal_code']);
			$entry->setPlace($postdata['place']);
			$entry->setDate($postdata['date']);
			$entry->setPublished($postdata['published']);
			$entry->setActiecode($postdata['actiecode']);
			$entry->save();
			$id = $entry->getId();
			WE_Engine_Session::setFlash('De entry succesvol toegevoegd.', 'success');
			$this->redirect($this->getRequest()->getSystemKey()."/entry/view/$id");
		} else {
			return $this->view->render();
		}
	}
	
	public function	modifyAction () {
		if ($this->getRequest()->isPost()) {
			$entry = Db::getModel('Entry')->find($this->getRequest()->getGet('id'));
			$postdata = $this->getRequest()->getPost('entry');
			
			$entry->setStatus($postdata['status']);
			$entry->setFilename($postdata['filename']);
			$entry->setFirst_name($postdata['first_name']);
			$entry->setLast_name($postdata['last_name']);
			$entry->setDescription($postdata['description']);
			$entry->setEmail($postdata['email']);
			$entry->setIp($postdata['ip']);
			$entry->setNewsletter($postdata['newsletter']);
			$entry->setStreet_name($postdata['street_name']);
			$entry->setStreet_number($postdata['street_number']);
			$entry->setPostal_code($postdata['postal_code']);
			$entry->setPlace($postdata['place']);
			$entry->setDate($postdata['date']);
			$entry->setPublished($postdata['published']);
			$entry->setActiecode($postdata['actiecode']);
			$entry->save();
			
			WE_Engine_Session::setFlash('De entry succesvol bewerkt.', 'success');
			$this->redirect($this->getRequest()->getSystemKey()."/entry/view/".$entry->getId());
		} else {
			$entry = Db::getModel('Entry')->find($this->getRequest()->getGet('id'));
			$this->view->assign('entry',$entry);
			return $this->view->render();
		}
	}
	
	public function	deleteAction () {
		$entry = Db::getModel('Entry')->find($this->getRequest()->getGet('id'));
		if ( !is_object($entry) ) {
			WE_Engine_Session::setFlash('Er is geen entry gevonden met het betreffende Id', 'error');
			$this->redirect($this->getRequest()->getSystemKey()."/entry");
		} else {
			$entry->delete();
			WE_Engine_Session::setFlash('De entry succesvol verwijderd.', 'success');
			$this->redirect($this->getRequest()->getSystemKey()."/entry");
		}
	}
	
	public function clearAllAction() {
		if ( $this->getRequest()->isPost() && $this->getRequest()->getPost('areyousure') ) {
			$entries = Db::getTable('Entry')->getAll(true,false);
			foreach ( $entries->getResult() as $entry ) {
				$entry->setPublished(0);
				$entry->save();
			}
			$this->redirect($this->getRequest()->getSystemKey()."/entry");
		} else {
			return $this->view->render();
		}
	}
	
}	
?>